// Generated by view binder compiler. Do not edit!
package com.goldrush.offortune.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.goldrush.offortune.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SecondSlotsScreensBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RelativeLayout board;

  @NonNull
  public final TextView btnDownBet;

  @NonNull
  public final TextView btnSpinStart;

  @NonNull
  public final TextView btnUpBet;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final Guideline guideline4;

  @NonNull
  public final View q0;

  @NonNull
  public final View q1;

  @NonNull
  public final View q10;

  @NonNull
  public final View q11;

  @NonNull
  public final View q12;

  @NonNull
  public final View q13;

  @NonNull
  public final View q14;

  @NonNull
  public final View q15;

  @NonNull
  public final View q16;

  @NonNull
  public final View q17;

  @NonNull
  public final View q18;

  @NonNull
  public final View q19;

  @NonNull
  public final View q2;

  @NonNull
  public final View q3;

  @NonNull
  public final View q4;

  @NonNull
  public final View q5;

  @NonNull
  public final View q6;

  @NonNull
  public final View q7;

  @NonNull
  public final View q8;

  @NonNull
  public final View q9;

  @NonNull
  public final RelativeLayout relativeLayout2;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final RelativeLayout relativeLayout3;

  @NonNull
  public final TextView tvBankScoresss;

  @NonNull
  public final TextView tvBetScoress;

  @NonNull
  public final TextView tvWinScoresss;

  private SecondSlotsScreensBinding(@NonNull ConstraintLayout rootView,
      @NonNull RelativeLayout board, @NonNull TextView btnDownBet, @NonNull TextView btnSpinStart,
      @NonNull TextView btnUpBet, @Nullable Guideline guideline4, @NonNull View q0,
      @NonNull View q1, @NonNull View q10, @NonNull View q11, @NonNull View q12, @NonNull View q13,
      @NonNull View q14, @NonNull View q15, @NonNull View q16, @NonNull View q17, @NonNull View q18,
      @NonNull View q19, @NonNull View q2, @NonNull View q3, @NonNull View q4, @NonNull View q5,
      @NonNull View q6, @NonNull View q7, @NonNull View q8, @NonNull View q9,
      @NonNull RelativeLayout relativeLayout2, @Nullable RelativeLayout relativeLayout3,
      @NonNull TextView tvBankScoresss, @NonNull TextView tvBetScoress,
      @NonNull TextView tvWinScoresss) {
    this.rootView = rootView;
    this.board = board;
    this.btnDownBet = btnDownBet;
    this.btnSpinStart = btnSpinStart;
    this.btnUpBet = btnUpBet;
    this.guideline4 = guideline4;
    this.q0 = q0;
    this.q1 = q1;
    this.q10 = q10;
    this.q11 = q11;
    this.q12 = q12;
    this.q13 = q13;
    this.q14 = q14;
    this.q15 = q15;
    this.q16 = q16;
    this.q17 = q17;
    this.q18 = q18;
    this.q19 = q19;
    this.q2 = q2;
    this.q3 = q3;
    this.q4 = q4;
    this.q5 = q5;
    this.q6 = q6;
    this.q7 = q7;
    this.q8 = q8;
    this.q9 = q9;
    this.relativeLayout2 = relativeLayout2;
    this.relativeLayout3 = relativeLayout3;
    this.tvBankScoresss = tvBankScoresss;
    this.tvBetScoress = tvBetScoress;
    this.tvWinScoresss = tvWinScoresss;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SecondSlotsScreensBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SecondSlotsScreensBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.second_slots_screens, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SecondSlotsScreensBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.board;
      RelativeLayout board = ViewBindings.findChildViewById(rootView, id);
      if (board == null) {
        break missingId;
      }

      id = R.id.btn_down_bet;
      TextView btnDownBet = ViewBindings.findChildViewById(rootView, id);
      if (btnDownBet == null) {
        break missingId;
      }

      id = R.id.btn_spin_start;
      TextView btnSpinStart = ViewBindings.findChildViewById(rootView, id);
      if (btnSpinStart == null) {
        break missingId;
      }

      id = R.id.btn_up_bet;
      TextView btnUpBet = ViewBindings.findChildViewById(rootView, id);
      if (btnUpBet == null) {
        break missingId;
      }

      id = R.id.guideline4;
      Guideline guideline4 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.q0;
      View q0 = ViewBindings.findChildViewById(rootView, id);
      if (q0 == null) {
        break missingId;
      }

      id = R.id.q1;
      View q1 = ViewBindings.findChildViewById(rootView, id);
      if (q1 == null) {
        break missingId;
      }

      id = R.id.q10;
      View q10 = ViewBindings.findChildViewById(rootView, id);
      if (q10 == null) {
        break missingId;
      }

      id = R.id.q11;
      View q11 = ViewBindings.findChildViewById(rootView, id);
      if (q11 == null) {
        break missingId;
      }

      id = R.id.q12;
      View q12 = ViewBindings.findChildViewById(rootView, id);
      if (q12 == null) {
        break missingId;
      }

      id = R.id.q13;
      View q13 = ViewBindings.findChildViewById(rootView, id);
      if (q13 == null) {
        break missingId;
      }

      id = R.id.q14;
      View q14 = ViewBindings.findChildViewById(rootView, id);
      if (q14 == null) {
        break missingId;
      }

      id = R.id.q15;
      View q15 = ViewBindings.findChildViewById(rootView, id);
      if (q15 == null) {
        break missingId;
      }

      id = R.id.q16;
      View q16 = ViewBindings.findChildViewById(rootView, id);
      if (q16 == null) {
        break missingId;
      }

      id = R.id.q17;
      View q17 = ViewBindings.findChildViewById(rootView, id);
      if (q17 == null) {
        break missingId;
      }

      id = R.id.q18;
      View q18 = ViewBindings.findChildViewById(rootView, id);
      if (q18 == null) {
        break missingId;
      }

      id = R.id.q19;
      View q19 = ViewBindings.findChildViewById(rootView, id);
      if (q19 == null) {
        break missingId;
      }

      id = R.id.q2;
      View q2 = ViewBindings.findChildViewById(rootView, id);
      if (q2 == null) {
        break missingId;
      }

      id = R.id.q3;
      View q3 = ViewBindings.findChildViewById(rootView, id);
      if (q3 == null) {
        break missingId;
      }

      id = R.id.q4;
      View q4 = ViewBindings.findChildViewById(rootView, id);
      if (q4 == null) {
        break missingId;
      }

      id = R.id.q5;
      View q5 = ViewBindings.findChildViewById(rootView, id);
      if (q5 == null) {
        break missingId;
      }

      id = R.id.q6;
      View q6 = ViewBindings.findChildViewById(rootView, id);
      if (q6 == null) {
        break missingId;
      }

      id = R.id.q7;
      View q7 = ViewBindings.findChildViewById(rootView, id);
      if (q7 == null) {
        break missingId;
      }

      id = R.id.q8;
      View q8 = ViewBindings.findChildViewById(rootView, id);
      if (q8 == null) {
        break missingId;
      }

      id = R.id.q9;
      View q9 = ViewBindings.findChildViewById(rootView, id);
      if (q9 == null) {
        break missingId;
      }

      id = R.id.relativeLayout2;
      RelativeLayout relativeLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout2 == null) {
        break missingId;
      }

      id = R.id.relativeLayout3;
      RelativeLayout relativeLayout3 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.tv_bank_scoresss;
      TextView tvBankScoresss = ViewBindings.findChildViewById(rootView, id);
      if (tvBankScoresss == null) {
        break missingId;
      }

      id = R.id.tv_bet_scoress;
      TextView tvBetScoress = ViewBindings.findChildViewById(rootView, id);
      if (tvBetScoress == null) {
        break missingId;
      }

      id = R.id.tv_win_scoresss;
      TextView tvWinScoresss = ViewBindings.findChildViewById(rootView, id);
      if (tvWinScoresss == null) {
        break missingId;
      }

      return new SecondSlotsScreensBinding((ConstraintLayout) rootView, board, btnDownBet,
          btnSpinStart, btnUpBet, guideline4, q0, q1, q10, q11, q12, q13, q14, q15, q16, q17, q18,
          q19, q2, q3, q4, q5, q6, q7, q8, q9, relativeLayout2, relativeLayout3, tvBankScoresss,
          tvBetScoress, tvWinScoresss);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
